import java.util.Arrays;

public class Main {
    public static long[] seq1 = new long[100];

    public static void main(String[] args) {
        long[] seq2 = generateSequenceWithTabulation(100);
        printSequence(seq2);

        long result1 = generateSequence(100);
        printSequence(seq1);

    }

    // Generate sequence using recursion with memoization
    public static long generateSequence(int n){
        if(n<0){
            return 0;
        }
        else if(n<1){
            return 1;
        }
        else if(seq1[n-1] != 0){
            return seq1[n-1];
        }
        seq1[n-1] = (generateSequence(n-1) +generateSequence(n-2) + generateSequence(n-3));
        return seq1[n-1];
    }

    // Generate sequence without if else condition
    public static long[] generateSequenceWithTabulation(int n){
        long[] table = new long[n+3];
        Arrays.fill(table,0);
        table[2] = 1;
        for (int i=0;i<n;i++){
            table[i+1] += table[i];
            table[i+2] += table[i];
            table[i+3] += table[i];
        }
        // Since the expected series start with the 4th terms of "table",
        // we should create a new series without the first three terms;

        long[] result = new long[n];

        for (int i=0;i<n;i++){
            result[i] = table[i+3];
        }

        return result;
    }

    public static void printSequence(long[] seq){
        for(int i=0;i<seq.length;i++){
            for(int j=0;j<=i;j++){
                System.out.print(seq[j]);
            }
            System.out.println();
        }
    }
}